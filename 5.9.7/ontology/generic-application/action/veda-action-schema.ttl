@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d: <http://semantic-machines.com/veda/veda-data/> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix v-wf: <http://semantic-machines.com/veda/veda-workflow/> .

<http://semantic-machines.com/veda/veda-action-schema/>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология системы Veda. Мероприятие. Схема."@ru ;
  rdfs:label "Veda system ontology. Action. Schema."@en ;
  v-s:loadPriority 11 ;
.
# ------------------------------------------------------------ СТРОКИ --
v-s:TaskPeriodBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Выдать задачу за"@ru ;
  rdfs:label "Task start before"@en ;
.
v-s:TaskDateBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Дата события"@ru ;
  rdfs:label "Task date"@en ;
.
v-s:TaskGiveAwatDateBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Задача выдана"@ru ;
  rdfs:label "Task give away"@en ;
.
v-s:BacwardTargetBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Документ"@ru ;
  rdfs:label "Document"@en ;
.
v-s:ScheduledActionsBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Запланированные события"@ru ;
  rdfs:label "Scheduled actions"@en ;
.
v-s:AddScheduledAction
  rdf:type v-s:Bundle ;
  rdfs:label "Добавить"@ru ;
  rdfs:label "Add"@en ;
.

# ------------------------------------------------------------ КЛАССЫ --

# ---------------------------------------------------------- Мероприятие --
v-s:Action
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:UserThing ;
  rdfs:subClassOf v-s:Journaling ;
  rdfs:subClassOf v-s:Embedded ;
  rdfs:subClassOf v-s:AutomaticallyVersioned ;
  rdfs:subClassOf v-s:Measurable ;
  rdfs:subClassOf v-s:Controlled ;
  rdfs:subClassOf v-s:Registered ;
  rdfs:subClassOf v-s:Temporal ;
  rdfs:subClassOf v-s:Spatial ;
  rdfs:subClassOf v-s:Document ;
  rdfs:subClassOf v-s:BackwardLink ;
  rdfs:subClassOf v-s:Labeled ;
  rdfs:label "Мероприятие"@ru ;
  rdfs:label "Action"@en ;
  v-s:labelPattern "{@.v-s:registrationNumber} - {@.v-s:description [0,100]}" ;
#  v-ui:hasTemplate v-s:Action_Template ;
.
# --- В связи с вводом класса возникает предикат v-s:hasAction. Он описан в классе v-s:Activity

v-s:PS_hasAction_Action
  rdf:type v-ui:ObjectPropertySpecification ;
  v-ui:forClass v-s:Action ;
  v-ui:forProperty v-s:hasAction ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 100 ;
  #v-ui:queryPrefix "('rdf:type'==='v-s:Action')" ;
  rdfs:label "Спецификация свойства v-s:hasAction для класса v-s:Action"@ru ;
  rdfs:label "v-s:hasAction property specification for v-s:Action classes"@en ;
.
v-s:PsDateToForAction
  rdf:type v-ui:DatatypePropertySpecification ;
  v-ui:forClass v-s:Action ;
  v-ui:forProperty v-s:dateTo ;
  v-ui:maxCardinality 1 ;
  v-ui:minCardinality 0 ;
  v-ui:tooltip "Небязательно к заполнению, единичное значение."@ru ;
  v-ui:tooltip "Non-Required, single value."@en ;
  rdfs:label "Спецификация даты окончания для класса Action"@ru ;
  rdfs:label "Preferences property specification for dateTo in Action class"@en ;
.

v-s:PsResponsibleForAction
  rdf:type v-ui:ObjectPropertySpecification ;
  v-ui:forClass v-s:Action ;
  v-ui:forProperty v-s:responsible ;
  v-ui:maxCardinality 1 ;
  v-ui:minCardinality 1 ;
  v-ui:queryPrefix "('rdf:type'=='v-s:Appointment')"^^xsd:string ;
  v-ui:tooltip "Необязательно к заполнению, единичное значение. Ссылка на объект класса Назначение."@ru ;
  v-ui:tooltip "Non-required, simple value. Link to instance of Appointment class"@en ;
  rdfs:label "Спецификация свойства responsible для класса Action"@ru ;
  rdfs:label "Responsible property specification for Action class"@en ;
.

# ---------------------------------------------------------- Запланированное событие --
v-s:ScheduledAction
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Action ;
  rdfs:subClassOf v-s:BackwardLink ;
  rdfs:subClassOf v-s:Journaling ;
  rdfs:subClassOf v-s:Labeled ;
  rdfs:label "Запланированное событие"@ru ;
  rdfs:label "Scheduled action"@en ;
  v-s:labelPattern "{@.v-s:dateToPlan} - {@.v-s:description [0,100]}" ;
.

# v-s:parent
# rdfs:label
# v-s:description
  v-s:PsDescriptionForScheduledAction
    rdf:type v-ui:PropertySpecification ;
    v-ui:forClass v-s:ScheduledAction;
    v-ui:forProperty v-s:description ;
    v-ui:minCardinality 1 ;
    v-ui:maxCardinality 1 ;
    rdfs:label "Спецификация свойства v-s:description для класса v-s:ScheduledAction"@ru ;
    rdfs:label "v-s:description property specification for v-s:ScheduledAction class"@en ;
  .
# v-s:responsible
  v-s:PsResponsibleForScheduledAction
    rdf:type v-ui:PropertySpecification ;
    v-ui:forClass v-s:ScheduledAction;
    v-ui:forProperty v-s:responsible ;
    v-ui:minCardinality 1 ;
    v-ui:maxCardinality 1 ;
    v-ui:queryPrefix "('rdf:type'=='v-s:Appointment' )  && ('v-s:employee.v-s:hasAccount.isExists'=='true') && ('v-s:origin'=='sap hr' || 'v-s:origin'=='Group') || ('rdf:type'=='v-s:Position') && ( 'v-s:origin'=='Role')"^^xsd:string;
    rdfs:label "Спецификация свойства v-s:responsible для класса v-s:ScheduledAction"@ru ;
    rdfs:label "v-s:responsible property specification for v-s:ScheduledAction class"@en ;
  .
# v-s:controller
  v-s:PscontrollerForScheduledAction
    rdf:type v-ui:PropertySpecification ;
    v-ui:forClass v-s:ScheduledAction;
    v-ui:forProperty v-s:controller ;
    v-ui:minCardinality 0 ;
    v-ui:maxCardinality 1 ;
    v-ui:queryPrefix "('rdf:type'=='v-s:Appointment' )  && ('v-s:employee.v-s:hasAccount.isExists'=='true') && ('v-s:origin'=='sap hr' || 'v-s:origin'=='Group') || ('rdf:type'=='v-s:Position') && ( 'v-s:origin'=='Role')"^^xsd:string;
    rdfs:label "Спецификация свойства v-s:controller для класса v-s:ScheduledAction"@ru ;
    rdfs:label "v-s:controller property specification for v-s:ScheduledAction class"@en ;
  .
# v-s:dateToPlan
  v-s:PsDateToPlanForScheduledAction
    rdf:type v-ui:PropertySpecification ;
    v-ui:forClass v-s:ScheduledAction;
    v-ui:forProperty v-s:dateToPlan ;
    v-ui:minCardinality 1 ;
    v-ui:maxCardinality 1 ;
    rdfs:label "Спецификация свойства v-s:dateToPlan для класса v-s:ScheduledAction"@ru ;
    rdfs:label "v-s:dateToPlan property specification for v-s:ScheduledAction class"@en ;
  .
# v-s:scriptHandlered
v-s:hasPeriod
  rdf:type owl:ObjectProperty ;
  rdfs:label "Период"@ru ;
  rdfs:label "Period"@en ;
  rdfs:domain v-s:ScheduledAction ;
  rdfs:range v-s:Period ;
.
  v-s:PsHasPeriodForScheduledAction
    rdf:type v-ui:ObjectPropertySpecification ;
    v-ui:forClass v-s:ScheduledAction;
    v-ui:forProperty v-s:hasPeriod ;
    v-ui:minCardinality 1 ;
    v-ui:maxCardinality 10 ;
    v-ui:queryPrefix "'rdf:type'=='v-s:Period'"^^xsd:string ;
    rdfs:label "Спецификация свойства v-s:hasPeriod для класса v-s:ScheduledAction"@ru ;
    rdfs:label "v-s:hasPeriod property specification for v-s:ScheduledAction class"@en ;
  .
# v-s:dateToFact
# v-s:hasStatus

v-s:hasScheduledAction
  rdf:type owl:ObjectProperty ;
  rdfs:label "Запланированное событие"@ru ;
  rdfs:label "ScheduledAction"@en ;
  rdfs:domain v-s:ScheduledAction ;
  rdfs:range v-s:UserThing ;
.

# ------------------------------------------------------------ Справочник Период --

v-s:Period
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:UserThing ;
  rdfs:label "Период"@ru ;
  rdfs:label "Period"@en ;
.

# ------------------------------------------------------------ УПРАВЛЕНИЕ ПРАВАМИ --
v-s:ScheduledAction_BaseUser
  rdf:type v-s:Group ;
  rdfs:label "Основные пользователи ScheduledAction" ;
.
v-s:ScheduledAction_permission1
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-s:ScheduledAction ;
  v-s:permissionSubject v-s:ScheduledAction_BaseUser ;
  v-s:canCreate "true"^^xsd:boolean ;
  rdfs:label "C. Все пользователи. Класс ScheduledAction" ;
.
v-s:AllUsersGroup_ScheduledActionBaseUser_membership
  rdf:type v-s:Membership ;
  v-s:memberOf v-s:ScheduledAction_BaseUser ;
  v-s:resource cfg:AllUsersGroup ;
  rdfs:label "Все пользователи входят в группу Основные пользователи ScheduledAction" ;
.
# ------------------------------------------------------------ ШАБЛОНЫ --
v-s:TS_ScheduledAction
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-s:NewSingleScheduledActionTemplate;
  v-ui:forClass v-s:ScheduledAction
.
v-s:CS_ScheduledAction
  rdf:type v-s:ClassSpecification ;
  rdfs:label "Спецификация класса v-s:ScheduledAction "@ru, "Class specification v-s:ScheduledAction "@en;
  v-ui:forClass v-s:ScheduledAction ;
  v-s:shelfLife 9999;
  v-ui:defaultTemplate v-s:ScheduledActionTemplate;
  v-s:labelPattern "{@.v-s:dateToPlan} - {@.v-s:description [0,100]}" ;
  v-s:loadPriority 15 ;
.
v-s:ScheduledActionTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для отображения Событий"@ru ;
  rdfs:label "Template for ScheduledAction rendering"@en ;
  v-ui:template "v-s_ScheduledActionTemplate.js";
.
v-s:SingleScheduledActionTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-s:ScheduledAction ;
  rdfs:label "Шаблон для класса v-s:ScheduledAction"@ru ;
  rdfs:label "Template for v-s:ScheduledAction class"@en ;
  v-ui:template "v-s_SingleScheduledActionTemplate.js" ;
.
v-s:NewSingleScheduledActionTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-s:ScheduledAction ;
  rdfs:label "Шаблон для класса v-s:ScheduledAction"@ru ;
  rdfs:label "Template for v-s:ScheduledAction class"@en ;
  v-ui:template "v-s_NewSingleScheduledActionTemplate.js" ;
.
v-s:RecursiveScheduledActionTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса v-s:ScheduledAction"@ru ;
  rdfs:label "Template for v-s:ScheduledAction class"@en ;
  v-ui:template "v-s_RecursiveScheduledActionTemplate.js" ;
.

# ------------  / ScheduledAction template ---------------

# ------------  ScheduledAction events ---------------

cfg:ScheduledAction_CreateInstruction_Daily
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAppointment ;
  rdfs:label "Создание поручения для запланированных событий" ;
  v-s:triggerByUid cfg:hourly ;
  v-s:runAt "V8.LowPriority";
  v-s:script """
print("[cfg:ScheduledAction_CreateInstruction_Daily] ************************** START **************************");

var scriptInfo = get_individual(veda.ticket, 'v-s:ScheduledAction_CreateInstruction_Daily_Info');
if (!scriptInfo) {
  var yesterday = new Date();
  yesterday.setDate(yesterday.getDate() - 1);
  scriptInfo = {
    '@': 'v-s:ScheduledAction_CreateInstruction_Daily_Info',
    'rdf:type': veda.Util.newUri('v-s:CronScriptsInfo'),
    'v-s:lastDateOfExecuting':  veda.Util.newDate(yesterday)
  };
}

//print('scritInfo=', veda.Util.toJson(scriptInfo));
var lastDate = new Date(scriptInfo['v-s:lastDateOfExecuting'][0].data);
var today = new Date();
//что бы напоминания за час для времени, условно, в 11.15 выдавались в 10.00 а не в 11.00
today.setMinutes(59);
//today.setHours(today.getHours()+1);
//today.setHours(23,59,59,0);
var queryString = "( 'rdf:type'==='v-s:ScheduledAction' && 'v-s:scriptHandlered'=='false' )";
var result = query(ticket, queryString).result;
for (var i=0; i<result.length; i++){
  var individ = get_individual(veda.ticket, result[i]);
  // не нужно в случае множественного значения периода
  // if (veda.Util.hasValue(individ, 'v-s:dateToFact')) {
  //   print('Skip, because was processed: ',result[i]);
  //   continue;
  // };
  if (!veda.Util.hasValue(individ, "v-s:backwardTarget")) {
    print('Skip, because not found backwardTarget: ',result[i]);
    continue;
  }
  if (!veda.Util.hasValue(individ, "v-s:dateToPlan")) {
    print('Skip, because not found dateToPlan: ',result[i]);
    continue;
  }
  if (!veda.Util.hasValue(individ, "v-s:responsible")) {
    print('Skip, because not found responsible: ',result[i]);
    continue;
  }
  //print('dateToPlan=', individ['v-s:dateToPlan']);
  var deadline = new Date(individ['v-s:dateToPlan'][0].data);
  var isAll = true;
  var set_in_document = {
    '@': result[i]
  };
  for (var j = 0; j < individ['v-s:hasPeriod'].length; j++){
    var period = individ['v-s:hasPeriod'][j].data;
    var delta;
    if (period == 'd:z8r34mi5y8rl8m4kbo3q69uw5d') {
      delta = 86400000;
    } else if (period == 'd:a21t5y3pswuewm8ohjexiqtxscr') {
      delta = 86400000*7;
    } else if (period == 'd:fb27kxa3r98ilnkvmy99xc11p1') {
      delta = 86400000*14;
    } else if (period == 'd:pqauzdiqyls7pzrawelnh2zwj3') {
      delta = 86400000*30;
    } else if (period == 'd:d2cloqhm8yqaq8t68zi9iepc69') {
      delta = 86400000*61;
    } else if (period == 'd:a28m44dm9yw04j7hf69r4i40sn5') {
      delta = 86400000*121;
    } else if (period == 'd:p699yrkgnd7bamjaqwx305o5hi') {
      delta = 86400000*365;
    } else if (period == 'd:jsc4p8dq5u4fm1sumekuifkw7r') {
      delta = 86400000/24;
    } else {
      print("Skip, because period is unbehavior",result[i]);
      continue;
    }

    var targetDate = +deadline-delta;
    // print('targetDate ', targetDate);
    // print('targetDate-lastDate ', targetDate-lastDate);
    // print('today - targetDate ', today - targetDate);
    if ( (targetDate-lastDate)< 0 ) {
      print("Skip, because too last: ", result[i]);
      continue;
    } else if ( (today - targetDate) < 0 ) {
      isAll = false;
      print("Skip, because too early: ", result[i]);
      continue;
    }

    var uri = veda.Util.genUri() + "-tr";
    //print(veda.Util.toJson(individ['v-s:description']));
    var startForm = {
      "@" : uri,
      "rdf:type" : veda.Util.newUri("v-df:InstructionRouteStartForm"),
      "v-wf:StartForm_canEdit" : veda.Util.newBool(false),
      "v-wf:forNet" : veda.Util.newUri("s-wf:WrapUniversalNet"),
      "v-wf:processedDocument" : veda.Util.newUri(result[i]),
      "v-wf:useTransformation" : veda.Util.newUri("v-df:InstructionRouteStartFormToNet"),
      "v-wf:hasStatusWorkflow" : veda.Util.newUri("v-wf:ToBeSent"),
      "v-wf:fromShedulerScript" : veda.Util.newBool(true),
      "v-s:creator" : veda.Util.newUri ('cfg:VedaSystemAppointment'),
      "v-s:dateTo" : individ['v-s:dateToPlan']
    };
    if (veda.Util.hasValue(individ, "v-s:description")){
      startForm['rdfs:comment'] = individ['v-s:description'];
    }
    var responible = get_individual(veda.ticket, individ["v-s:responsible"][0].data);
    if (veda.Util.hasValue(responible, "v-s:deleted", { data: true, type: "Boolean" })) {
      if (veda.Util.hasValue(individ, "v-s:controller")) {
        startForm["v-s:responsible"] = individ['v-s:controller'];
      } else {
        startForm["v-s:responsible"] = individ['v-s:creator'];
      }
      var comment = "В запланированном событии "+individ["rdfs:label"][0].data+" ответственный не актуален";
      startForm['rdfs:comment'] = veda.Util.newStr(comment);
    } else {
      startForm["v-s:responsible"] = individ['v-s:responsible'];
    }
    if (veda.Util.hasValue(individ, "v-s:controller")) {
      startForm['v-s:controller'] = individ['v-s:controller'];
    }
    put_individual(veda.ticket, startForm, _event_id);
    set_in_document['v-s:dateToFact'] = veda.Util.newDate(new Date());
    print("Created: ", uri, ". For document:", result[i]);
  }
  if (isAll) {
    set_in_document["v-s:hasStatus"] = veda.Util.newUri("v-s:StatusProcessed");
    set_in_document['v-s:scriptHandlered'] = veda.Util.newBool(true);
  } else {
    set_in_document["v-s:hasStatus"] = veda.Util.newUri("v-s:StatusPartiallyProcessed");
  }
  set_in_individual(ticket, set_in_document, _event_id);
}
scriptInfo['v-s:lastDateOfExecuting'] = veda.Util.newDate(new Date());
put_individual(ticket, scriptInfo, _event_id);
print("[cfg:ScheduledAction_CreateInstruction_Daily] *************************** END ***************************");
""" ;
.

# ------------  / ScheduledAction events ---------------
