"use strict";

System.register(["/js/browser/util.js", "jquery", "/js/common/veda.js", "/js/common/individual_model.js"], function (_export, _context) {
  "use strict";

  var BrowserUtil, $, veda, IndividualModel, pre, html;
  return {
    setters: [function (_jsBrowserUtilJs) {
      BrowserUtil = _jsBrowserUtilJs.default;
    }, function (_jquery) {
      $ = _jquery.default;
    }, function (_jsCommonVedaJs) {
      veda = _jsCommonVedaJs.default;
    }, function (_jsCommonIndividual_modelJs) {
      IndividualModel = _jsCommonIndividual_modelJs.default;
    }],
    execute: function () {
      _export("pre", pre = function pre(individual, template, container, mode, extra) {
        template = $(template);
        container = $(container);
        if (individual.hasValue('v-wf:isCompleted', true)) {
          template.children().first().addClass('success');
          $('.docflow-buttons', template).remove();
        } else if (individual.hasValue('v-wf:isEditable', false)) {
          $('.docflow-buttons', template).remove();
        } else {
          var isDirectTask = individual.hasValue('v-wf:isDirectTask', true);
          if (isDirectTask) {
            var currentEmployee = veda.appointment['v-s:employee'][0];
            var currentOcuppation = veda.appointment['v-s:occupation'][0];
            var targetEmployee = individual['v-wf:from'][0];
            var targetOccupation = individual['v-wf:from'][1];
            var canRevoke = currentEmployee === targetEmployee || currentOcuppation === targetOccupation;
            var isMemberOccupation_Promise = veda.user.isMemberOf(targetOccupation.id);
            var promises = [isMemberOccupation_Promise, veda.user.isMemberOf('cfg:SuperUser')];
            Promise.all(promises).then(function (result) {
              var isMemberOccupation = result[0];
              var isMemberSuperUser = result[1];
              if (canRevoke || isMemberSuperUser || isMemberOccupation) {
                $('.docflow-buttons', template).show();
                $('.redirect', template).click(takeDecision.bind(null, 'v-wf:DecisionRedirect', 'Перенаправлено'));
                $('.revoke', template).click(takeDecision.bind(null, 'v-wf:DecisionRevokeTask', 'Задача отозвана'));
              } else {
                $('.docflow-buttons', template).remove();
              }
            });
          } else {
            $('.docflow-buttons', template).remove();
          }
        }

        // TODO: refactor this
        if (!individual.hasValue('v-wf:redirect_from_task') || individual.hasValue('v-wf:redirect_from_task', 's-wf:EmptyTask')) {
          $('.is-redirected', template).remove();
        }
        function takeDecision(takenDecision, label) {
          var decisionClass = new IndividualModel(takenDecision);
          var decision = new IndividualModel();
          decision['rdf:type'] = [decisionClass];
          decision['v-s:backwardTarget'] = [individual];
          decision['rdfs:label'] = [label];
          decision['v-s:backwardProperty'] = [new IndividualModel('v-wf:takenDecision')];
          decision['v-s:canRead'] = [true];
          var modal = BrowserUtil.showModal(decision, undefined, 'edit');
          decision.one('afterReset', function () {
            modal.modal('hide').remove();
          });
          decision.one('afterSave', function () {
            modal.modal('hide').remove();
            $('.docflow-buttons', template).hide();
          });
        }
      });
      _export("html", html = "\n  <tr>\n    <td class=\"sequence-number\"></td>\n    <td>\n      <div about=\"@\" rel=\"v-wf:from\" data-template=\"v-ui:LabelTemplate\"></div>\n      <div about=\"@\" rel=\"v-wf:redirect_from_task\" class=\"is-redirected\">\n        <div>\n          <strong><small about=\"v-s:TaskIsRedirectedFrom\" property=\"rdfs:label\"></small></strong>\n          <small about=\"@\" rel=\"v-wf:to\" data-template=\"v-ui:LabelTemplate\"></small>\n        </div>\n      </div>\n    </td>\n    <td about=\"@\" rel=\"v-wf:to\" data-template=\"v-ui:LabelTemplate\"></td>\n    <td>\n      <a href=\"#/@\" about=\"@\" property=\"rdfs:label\"></a>\n      <div about=\"@\" property=\"v-s:description\" style=\"white-space: pre-line;\"></div>\n    </td>\n    <td about=\"@\" property=\"v-s:created\"></td>\n    <td>\n      <div about=\"@\" rel=\"v-wf:takenDecision\">\n        <div>\n          <strong about=\"@\" property=\"rdfs:label\"></strong>\n          <span about=\"@\" rel=\"v-wf:to\">\n            <span>\n              <span>&rarr;</span>\n              <span about=\"@\" data-template=\"v-ui:LabelTemplate\"></span>\n            </span>\n          </span>\n          <div><i about=\"@\" property=\"rdfs:comment\"></i></div>\n          <hr class=\"margin-sm\" />\n          <small about=\"@\" rel=\"v-s:creator\" data-template=\"v-ui:LabelTemplate\"></small> &middot; <small aboout=\"@\" property=\"v-s:created\"></small>\n        </div>\n      </div>\n      <div class=\"docflow-buttons\" style=\"display:none\">\n        <button class=\"btn btn-sm btn-warning redirect\" about=\"v-wf:DecisionRedirect_Bundle\" property=\"rdfs:label\"></button>\n        <button class=\"btn btn-sm btn-info revoke\" about=\"v-wf:DecisionRevoke_Bundle\" property=\"rdfs:label\"></button>\n      </div>\n    </td>\n  </tr>\n");
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,