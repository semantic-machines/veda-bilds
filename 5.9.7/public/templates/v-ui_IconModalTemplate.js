"use strict";

System.register(["jquery", "riot"], function (_export, _context) {
  "use strict";

  var $, riot, post, html;
  return {
    setters: [function (_jquery) {
      $ = _jquery.default;
    }, function (_riot) {
      riot = _riot.default;
    }],
    execute: function () {
      _export("post", post = function post(individual, template, container, mode, extra) {
        template = $(template);
        container = $(container);
        template.on('click', function (e) {
          e.preventDefault();
          var newMode = container.attr('data-mode');
          var parentTmpl = template.parent().closest('[resource]');
          if (!newMode && parentTmpl.attr('resource') === individual.id) {
            newMode = parentTmpl.attr('data-mode');
          }
          if ($('body').hasClass('modal-open')) {
            $('.modal').modal('hide').remove();
          }
          var modal = $('#notification-modal-template').html();
          modal = $(modal).modal({
            show: false
          });
          $('body').append(modal);
          modal.modal('show');
          modal.on('hidden.bs.modal', function () {
            modal.remove();
          });
          if (newMode == 'edit') {
            modal.find('#follow').remove();
          } else {
            modal.find('#follow').click(function () {
              var resourceTemplate = modal.find('[resource]').first();
              var uri = resourceTemplate.attr('resource');
              var mode = resourceTemplate.attr('data-mode');
              modal.modal('hide');
              riot.route(['#', uri, '#main', undefined, mode].join('/'));
            });
          }
          template.one('remove', function () {
            modal.modal('hide').remove();
          });
          var cntr = $('.modal-body', modal);
          var ok = $('#ok', modal);
          cntr.on('valid', function () {
            ok.removeAttr('disabled');
          });
          cntr.on('invalid', function () {
            ok.attr('disabled', 'disabled');
          });
          individual.present(cntr, undefined, newMode).then(function (tmpl) {
            if (newMode === 'edit') {
              tmpl = $(tmpl);
              ok.parent().removeClass('hide');
              tmpl.on('internal-validated', function (e) {
                var validation = e.detail;
                if (validation.state) {
                  ok.removeAttr('disabled');
                } else {
                  ok.attr('disabled', 'disabled');
                }
                e.stopPropagation();
              });
              $('.actions', tmpl).remove();
            }
          });
          individual.one('afterSave', function () {
            modal.modal('hide').remove();
          });
        });
      });
      _export("html", html = "\n  <a href=\"#\" class=\"glyphicon glyphicon-zoom-in\" tabindex=\"-1\"></a>\n");
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwiX2pxdWVyeSIsImRlZmF1bHQiLCJfcmlvdCIsInJpb3QiLCJleGVjdXRlIiwiX2V4cG9ydCIsInBvc3QiLCJpbmRpdmlkdWFsIiwidGVtcGxhdGUiLCJjb250YWluZXIiLCJtb2RlIiwiZXh0cmEiLCJvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIm5ld01vZGUiLCJhdHRyIiwicGFyZW50VG1wbCIsInBhcmVudCIsImNsb3Nlc3QiLCJpZCIsImhhc0NsYXNzIiwibW9kYWwiLCJyZW1vdmUiLCJodG1sIiwic2hvdyIsImFwcGVuZCIsImZpbmQiLCJjbGljayIsInJlc291cmNlVGVtcGxhdGUiLCJmaXJzdCIsInVyaSIsInJvdXRlIiwidW5kZWZpbmVkIiwiam9pbiIsIm9uZSIsImNudHIiLCJvayIsInJlbW92ZUF0dHIiLCJwcmVzZW50IiwidGhlbiIsInRtcGwiLCJyZW1vdmVDbGFzcyIsInZhbGlkYXRpb24iLCJkZXRhaWwiLCJzdGF0ZSIsInN0b3BQcm9wYWdhdGlvbiJdLCJzb3VyY2VzIjpbIi4uLy4uL29udG9sb2d5L3N5c3RlbS1jb3JlL3RlbXBsYXRlcy92LXVpX0ljb25Nb2RhbFRlbXBsYXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgcmlvdCBmcm9tICdyaW90JztcblxuZXhwb3J0IGNvbnN0IHBvc3QgPSBmdW5jdGlvbiAoaW5kaXZpZHVhbCwgdGVtcGxhdGUsIGNvbnRhaW5lciwgbW9kZSwgZXh0cmEpIHtcbiAgdGVtcGxhdGUgPSAkKHRlbXBsYXRlKTtcbiAgY29udGFpbmVyID0gJChjb250YWluZXIpO1xuXG4gIHRlbXBsYXRlLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxldCBuZXdNb2RlID0gY29udGFpbmVyLmF0dHIoJ2RhdGEtbW9kZScpO1xuICAgIGNvbnN0IHBhcmVudFRtcGwgPSB0ZW1wbGF0ZS5wYXJlbnQoKS5jbG9zZXN0KCdbcmVzb3VyY2VdJyk7XG4gICAgaWYgKCFuZXdNb2RlICYmIHBhcmVudFRtcGwuYXR0cigncmVzb3VyY2UnKSA9PT0gaW5kaXZpZHVhbC5pZCkge1xuICAgICAgbmV3TW9kZSA9IHBhcmVudFRtcGwuYXR0cignZGF0YS1tb2RlJyk7XG4gICAgfVxuXG4gICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnbW9kYWwtb3BlbicpKSB7XG4gICAgICAkKCcubW9kYWwnKS5tb2RhbCgnaGlkZScpLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGxldCBtb2RhbCA9ICQoJyNub3RpZmljYXRpb24tbW9kYWwtdGVtcGxhdGUnKS5odG1sKCk7XG4gICAgbW9kYWwgPSAkKG1vZGFsKS5tb2RhbCh7c2hvdzogZmFsc2V9KTtcbiAgICAkKCdib2R5JykuYXBwZW5kKG1vZGFsKTtcbiAgICBtb2RhbC5tb2RhbCgnc2hvdycpO1xuXG4gICAgbW9kYWwub24oJ2hpZGRlbi5icy5tb2RhbCcsICgpID0+IHtcbiAgICAgIG1vZGFsLnJlbW92ZSgpO1xuICAgIH0pO1xuXG4gICAgaWYgKG5ld01vZGUgPT0gJ2VkaXQnKSB7XG4gICAgICBtb2RhbC5maW5kKCcjZm9sbG93JykucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG1vZGFsLmZpbmQoJyNmb2xsb3cnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHJlc291cmNlVGVtcGxhdGUgPSBtb2RhbC5maW5kKCdbcmVzb3VyY2VdJykuZmlyc3QoKTtcbiAgICAgICAgY29uc3QgdXJpID0gcmVzb3VyY2VUZW1wbGF0ZS5hdHRyKCdyZXNvdXJjZScpO1xuICAgICAgICBjb25zdCBtb2RlID0gcmVzb3VyY2VUZW1wbGF0ZS5hdHRyKCdkYXRhLW1vZGUnKTtcbiAgICAgICAgbW9kYWwubW9kYWwoJ2hpZGUnKTtcbiAgICAgICAgcmlvdC5yb3V0ZShbJyMnLCB1cmksICcjbWFpbicsIHVuZGVmaW5lZCwgbW9kZV0uam9pbignLycpKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRlbXBsYXRlLm9uZSgncmVtb3ZlJywgZnVuY3Rpb24gKCkge1xuICAgICAgbW9kYWwubW9kYWwoJ2hpZGUnKS5yZW1vdmUoKTtcbiAgICB9KTtcbiAgICBjb25zdCBjbnRyID0gJCgnLm1vZGFsLWJvZHknLCBtb2RhbCk7XG4gICAgY29uc3Qgb2sgPSAkKCcjb2snLCBtb2RhbCk7XG4gICAgY250ci5vbigndmFsaWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBvay5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpO1xuICAgIH0pO1xuICAgIGNudHIub24oJ2ludmFsaWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBvay5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgIH0pO1xuXG4gICAgaW5kaXZpZHVhbC5wcmVzZW50KGNudHIsIHVuZGVmaW5lZCwgbmV3TW9kZSkudGhlbihmdW5jdGlvbiAodG1wbCkge1xuICAgICAgaWYgKG5ld01vZGUgPT09ICdlZGl0Jykge1xuICAgICAgICB0bXBsID0gJCh0bXBsKTtcbiAgICAgICAgb2sucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgdG1wbC5vbignaW50ZXJuYWwtdmFsaWRhdGVkJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBjb25zdCB2YWxpZGF0aW9uID0gZS5kZXRhaWw7XG4gICAgICAgICAgaWYgKHZhbGlkYXRpb24uc3RhdGUpIHtcbiAgICAgICAgICAgIG9rLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9rLmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKCcuYWN0aW9ucycsIHRtcGwpLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGluZGl2aWR1YWwub25lKCdhZnRlclNhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBtb2RhbC5tb2RhbCgnaGlkZScpLnJlbW92ZSgpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBodG1sID0gYFxuICA8YSBocmVmPVwiI1wiIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi16b29tLWluXCIgdGFiaW5kZXg9XCItMVwiPjwvYT5cbmA7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O01BQU9BLENBQUMsR0FBQUMsT0FBQSxDQUFBQyxPQUFBO0lBQUEsYUFBQUMsS0FBQTtNQUNEQyxJQUFJLEdBQUFELEtBQUEsQ0FBQUQsT0FBQTtJQUFBO0lBQUFHLE9BQUEsV0FBQUEsQ0FBQTtNQUFBQyxPQUFBLFNBRUVDLElBQUksR0FBRyxTQUFQQSxJQUFJQSxDQUFhQyxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRTtRQUMxRUgsUUFBUSxHQUFHVCxDQUFDLENBQUNTLFFBQVEsQ0FBQztRQUN0QkMsU0FBUyxHQUFHVixDQUFDLENBQUNVLFNBQVMsQ0FBQztRQUV4QkQsUUFBUSxDQUFDSSxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVVDLENBQUMsRUFBRTtVQUNoQ0EsQ0FBQyxDQUFDQyxjQUFjLEVBQUU7VUFDbEIsSUFBSUMsT0FBTyxHQUFHTixTQUFTLENBQUNPLElBQUksQ0FBQyxXQUFXLENBQUM7VUFDekMsSUFBTUMsVUFBVSxHQUFHVCxRQUFRLENBQUNVLE1BQU0sRUFBRSxDQUFDQyxPQUFPLENBQUMsWUFBWSxDQUFDO1VBQzFELElBQUksQ0FBQ0osT0FBTyxJQUFJRSxVQUFVLENBQUNELElBQUksQ0FBQyxVQUFVLENBQUMsS0FBS1QsVUFBVSxDQUFDYSxFQUFFLEVBQUU7WUFDN0RMLE9BQU8sR0FBR0UsVUFBVSxDQUFDRCxJQUFJLENBQUMsV0FBVyxDQUFDO1VBQ3hDO1VBRUEsSUFBSWpCLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQ3NCLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFB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