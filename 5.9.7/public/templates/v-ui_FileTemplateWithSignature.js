"use strict";

System.register(["jquery", "/js/browser/crypto.js"], function (_export, _context) {
  "use strict";

  var $, Crypto, pre, post, html;
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function () {}; return { s: F, n: function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function (e) { throw e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function () { it = it.call(o); }, n: function () { var step = it.next(); normalCompletion = step.done; return step; }, e: function (e) { didErr = true; err = e; }, f: function () { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function () { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function (obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function (skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function () { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function (exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function (type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function (record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function (finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function (tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function (iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
  function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
  return {
    setters: [function (_jquery) {
      $ = _jquery.default;
    }, function (_jsBrowserCryptoJs) {
      Crypto = _jsBrowserCryptoJs.default;
    }],
    execute: function () {
      _export("pre", pre = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(individual, template, container, mode, extra) {
          var $template, $container, fn, img, idx, ext;
          return _regeneratorRuntime().wrap(function _callee$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                $template = $(template);
                $container = $(container);
                fn = individual['v-s:fileName'][0];
                img = 'jpg|jpeg|gif|png|bmp|svg';
                if (typeof fn === 'string' || _instanceof(fn, String)) {
                  idx = fn.lastIndexOf('.');
                  ext = fn.substr(idx + 1);
                  if (img.indexOf(ext.toLowerCase()) < 0) {
                    $('.thumbnail', $template).remove();
                    $('.filename', $template).css('width', '100%');
                  }
                }
              case 5:
              case "end":
                return _context2.stop();
            }
          }, _callee);
        }));
        return function pre(_x, _x2, _x3, _x4, _x5) {
          return _ref.apply(this, arguments);
        };
      }());
      _export("post", post = /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(individual, template, container, mode, extra) {
          var $template, $container, showSignature;
          return _regeneratorRuntime().wrap(function _callee5$(_context6) {
            while (1) switch (_context6.prev = _context6.next) {
              case 0:
                showSignature = function _showSignature() {
                  if (!individual.hasValue('v-s:digitalSignature')) {
                    $('.signatures', $template).addClass('hidden');
                    $('.verify-signature', $template).addClass('hidden');
                  } else {
                    $('.signatures', $template).removeClass('hidden');
                    $('.verify-signature', $template).removeClass('hidden');
                  }
                };
                $template = $(template);
                $container = $(container);
                individual.on('v-s:digitalSignature', showSignature);
                $template.one('remove', function () {
                  return individual.off('v-s:digitalSignature', showSignature);
                });
                showSignature();
                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
                  var crypto;
                  return _regeneratorRuntime().wrap(function _callee4$(_context5) {
                    while (1) switch (_context5.prev = _context5.next) {
                      case 0:
                        crypto = Crypto.getInstance();
                        _context5.prev = 1;
                        _context5.next = 4;
                        return crypto.init();
                      case 4:
                        _context5.next = 11;
                        break;
                      case 6:
                        _context5.prev = 6;
                        _context5.t0 = _context5["catch"](1);
                        console.log(_context5.t0);
                        $('.actions', $template).remove();
                        return _context5.abrupt("return");
                      case 11:
                        $('.add-signature', $template).click( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
                          return _regeneratorRuntime().wrap(function _callee2$(_context3) {
                            while (1) switch (_context3.prev = _context3.next) {
                              case 0:
                                if (individual.hasValue('v-s:uid')) {
                                  _context3.next = 5;
                                  break;
                                }
                                individual['v-s:uid'] = [crypto.genUUID()];
                                console.log(individual['v-s:uid']);
                                _context3.next = 5;
                                return individual.save();
                              case 5:
                                _context3.next = 7;
                                return crypto.addSignature(individual);
                              case 7:
                              case "end":
                                return _context3.stop();
                            }
                          }, _callee2);
                        })));
                        $('.verify-signature', $template).click( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
                          var _iterator, _step, signatureIndividual, signatureView;
                          return _regeneratorRuntime().wrap(function _callee3$(_context4) {
                            while (1) switch (_context4.prev = _context4.next) {
                              case 0:
                                _iterator = _createForOfIteratorHelper(individual.get('v-s:digitalSignature'));
                                _context4.prev = 1;
                                _iterator.s();
                              case 3:
                                if ((_step = _iterator.n()).done) {
                                  _context4.next = 20;
                                  break;
                                }
                                signatureIndividual = _step.value;
                                signatureView = $("li[resource=".concat(signatureIndividual.id.replace(':', '\\:'), "]"), $template).not('.signature-checked');
                                if (signatureView.length) {
                                  _context4.next = 8;
                                  break;
                                }
                                return _context4.abrupt("continue", 18);
                              case 8:
                                _context4.prev = 8;
                                _context4.next = 11;
                                return crypto.verifySignature(individual, signatureIndividual);
                              case 11:
                                signatureView.prepend('<i class="glyphicon glyphicon-ok-circle text-success"></i>').append('<strong><small><i class="text-success">Подпись верна</i></small></strong>');
                                _context4.next = 17;
                                break;
                              case 14:
                                _context4.prev = 14;
                                _context4.t0 = _context4["catch"](8);
                                signatureView.prepend('<i class="glyphicon glyphicon-remove-circle text-danger"></i>').append("<strong><small><i class=\"text-danger\" title=\"".concat(_context4.t0, "\">\u041F\u043E\u0434\u043F\u0438\u0441\u044C \u043D\u0435 \u0432\u0435\u0440\u043D\u0430</i></small></strong>"));
                              case 17:
                                signatureView.addClass('signature-checked');
                              case 18:
                                _context4.next = 3;
                                break;
                              case 20:
                                _context4.next = 25;
                                break;
                              case 22:
                                _context4.prev = 22;
                                _context4.t1 = _context4["catch"](1);
                                _iterator.e(_context4.t1);
                              case 25:
                                _context4.prev = 25;
                                _iterator.f();
                                return _context4.finish(25);
                              case 28:
                              case "end":
                                return _context4.stop();
                            }
                          }, _callee3, null, [[1, 22, 25, 28], [8, 14]]);
                        })));
                        if ($container.data('with-btn') == 'false' || $container.data('with-btn') == false) {
                          $('.actions', $template).remove();
                        }
                      case 14:
                      case "end":
                        return _context5.stop();
                    }
                  }, _callee4, null, [[1, 6]]);
                })));
              case 7:
              case "end":
                return _context6.stop();
            }
          }, _callee5);
        }));
        return function post(_x6, _x7, _x8, _x9, _x10) {
          return _ref2.apply(this, arguments);
        };
      }());
      _export("html", html = "\n  <div class=\"panel panel-default\" style=\"word-wrap:break-word; width:350px; display: inline-block; margin:0 20px 20px 0; overflow: hidden;\">\n    <div class=\"panel-body\">\n      <em about=\"rdfs:comment\" property=\"rdfs:label\" class=\"-view edit search\"></em>\n      <strong property=\"rdfs:comment\" class=\"view -edit -search\"></strong>\n      <veda-control data-type=\"string\" property=\"rdfs:comment\" class=\"-view edit search\"></veda-control>\n      <div class=\"clearfix margin-sm\">\n        <div class=\"thumbnail pull-left\" style=\"width:20%;display:inline-block;margin:0 3% 0 0;\" about=\"@\" data-template=\"v-ui:ModalImageTemplate\"></div>\n        <div class=\"filename pull-left\" style=\"width:77%;display:inline-block;\">\n          <div about=\"@\" data-template=\"v-ui:FileMinTemplate\"></div>\n          <i class=\"view -edit -search\">\n            <small about=\"@\" rel=\"v-s:creator\" data-template=\"v-ui:LabelTemplate\"></small> <small about=\"@\" property=\"v-s:created\"></small>\n          </i>\n        </div>\n      </div>\n      <div class=\"signatures\">\n        <hr class=\"margin-sm\"/>\n        <strong about=\"v-s:digitalSignature\" property=\"rdfs:label\" class=\"view edit search\"></strong>\n        <div rel=\"v-s:digitalSignature\" data-template=\"v-ui:FileMinTemplate\" class=\"-view edit search\"></div>\n        <ol rel=\"v-s:digitalSignature\" class=\"view -edit -search\" style=\"padding-inline-start: 0em; margin-inline-start: 1em;\">\n          <li class=\"margin-sm signature\">\n            <a href=\"/files/@\">\n              <span about=\"@\" property=\"v-s:fileName\"></span>\n            </a>\n            <i class=\"view -edit -search\"> <small about=\"@\" rel=\"v-s:creator\" data-template=\"v-ui:LabelTemplate\"></small> <small about=\"@\" property=\"v-s:created\"></small> </i>\n          </li>\n        </ol>\n      </div>\n    </div>\n    <div class=\"actions panel-footer\" hidden>\n      <button class=\"add-signature btn btn-success\">\u041F\u043E\u0434\u043F\u0438\u0441\u0430\u0442\u044C</button>\n      <button class=\"verify-signature btn btn-link view -edit -search\">\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C</button>\n    </div>\n  </div>\n");
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,