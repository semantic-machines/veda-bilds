"use strict";

System.register(["jquery", "/js/common/veda.js", "/js/common/individual_model.js"], function (_export, _context) {
  "use strict";

  var $, veda, IndividualModel, post, html;
  return {
    setters: [function (_jquery) {
      $ = _jquery.default;
    }, function (_jsCommonVedaJs) {
      veda = _jsCommonVedaJs.default;
    }, function (_jsCommonIndividual_modelJs) {
      IndividualModel = _jsCommonIndividual_modelJs.default;
    }],
    execute: function () {
      _export("post", post = function post(individual, template, container, mode, extra) {
        template = $(template);
        container = $(container);
        function forAdmin() {
          if (veda.appointment.id == 'cfg:AdministratorAppointment' && individual.id != 'd:org_RU1121003135') $('#rigthsForAdmin').removeClass('hide');
        }
        forAdmin();
        $('#add-OrgVedaAccount', template).click(function () {
          var org = individual.id;
          var org1 = org.slice(6);
          var org_gr = new IndividualModel(individual + '_group');
          var _class = new IndividualModel('v-s:Membership');
          var OrgWithVedaAccount = new IndividualModel();
          OrgWithVedaAccount['rdf:type'] = [_class];
          OrgWithVedaAccount['v-s:memberOf'] = [new IndividualModel('v-s:OrganizationsWithVedaAccount')];
          OrgWithVedaAccount['v-s:resource'] = [org_gr];
          OrgWithVedaAccount.id = 'v-s:OrganizationsWithVedaAccount' + '_' + org1;
          OrgWithVedaAccount.save();
        });
        $('#add-OrgADAccount', template).click(function () {
          var org = individual.id;
          var org1 = org.slice(6);
          var org_gr = new IndividualModel(individual + '_group');
          var _class = new IndividualModel('v-s:Membership');
          var OrgWithADAccount = new IndividualModel();
          OrgWithADAccount['rdf:type'] = [_class];
          OrgWithADAccount['v-s:memberOf'] = [new IndividualModel('v-s:OrganizationsWithADAccount')];
          OrgWithADAccount['v-s:resource'] = [org_gr];
          OrgWithADAccount.id = 'v-s:OrganizationsWithADAccount' + '_' + org1;
          OrgWithADAccount.save();
        });
        $('#add-OrgWithLimited', template).click(function () {
          var org = individual.id;
          var org1 = org.slice(6);
          var org_gr = new IndividualModel(individual + '_group');
          var _class = new IndividualModel('v-s:Membership');
          var OrgWithLimited = new IndividualModel();
          OrgWithLimited['rdf:type'] = [_class];
          OrgWithLimited['v-s:memberOf'] = [new IndividualModel('v-s:OrganizationsWithLimitedClassTypes')];
          OrgWithLimited['v-s:resource'] = [org_gr];
          OrgWithLimited.id = 'v-s:OrganizationsWithLimitedClassTypes' + '_' + org1;
          OrgWithLimited.save();
        });
        $('#add-OrgWithoutLimited', template).click(function () {
          var org = individual.id;
          var org1 = org.slice(6);
          var org_gr = new IndividualModel(individual + '_group');
          var _class = new IndividualModel('v-s:Membership');
          var OrgWithoutLimited = new IndividualModel();
          OrgWithoutLimited['rdf:type'] = [_class];
          OrgWithoutLimited['v-s:memberOf'] = [new IndividualModel('v-s:OrganizationsWithoutLimitedClassTypes')];
          OrgWithoutLimited['v-s:resource'] = [org_gr];
          OrgWithoutLimited.id = 'v-s:OrganizationsWithoutLimitedClassTypes' + '_' + org1;
          OrgWithoutLimited.save();
        });
        var membershipRegistry = new IndividualModel('v-s:OrganizationMembershipRegistry', false);
        var orgUri = individual.id;
        var membershipContainer = $('.memberships', template);
        membershipRegistry.load().then(function (loaded) {
          loaded['v-fs:top'] = [10];
          loaded['v-fs:fulltextQuery'] = ["'rdf:type' == 'v-s:Membership' && 'v-s:resource' == '" + orgUri + "_group'"];
          // loaded["v-fs:fulltextQuery"] = ["'rdf:type'=='v-s:Membership'"];
          loaded.present(membershipContainer, 'v-fs:AttributiveSearchInlineTemplate');
        });
      });
      _export("html", html = "\n  <div>\n    <div class=\"container sheet\">\n      <h2>\n        <span about=\"v-s:Organization\" property=\"rdfs:label\"></span>\n        <small about=\"@\" property=\"rdfs:label\"></small>\n      </h2>\n      <hr />\n      <!--<h3 about=\"v-s:hasMembership\" property=\"rdfs:label\"></h3>-->\n      <div class=\"memberships\" data-limit=\"10\"></div>\n\n      <div about=\"@\" data-template=\"v-ui:SystemPropertiesTemplate\" data-embedded=\"true\"></div>\n      <br />\n      <!-- BUTTONS -->\n      <div class=\"actions\">\n        <span about=\"@\" data-template=\"v-ui:StandardButtonsTemplate\" data-embedded=\"true\" data-buttons=\"edit save cancel delete journal\"></span>\n        <span id=\"rigthsForAdmin\" class=\"hide\">\n          <button class=\"btn btn-secondary view -edit -search\" id=\"add-OrgVedaAccount\">\n            <span about=\"v-s:AddInGroupOrgWithVedaAccount\" property=\"rdfs:label\"></span>\n          </button>\n          <button class=\"btn btn-secondary view -edit -search\" id=\"add-OrgADAccount\">\n            <span about=\"v-s:AddInGroupOrgWithVedaADAccount\" property=\"rdfs:label\"></span>\n          </button>\n          <button class=\"btn btn-secondary view -edit -search\" id=\"add-OrgWithLimited\">\n            <span about=\"v-s:AddInGroupOrgWithLimitedClassTypes\" property=\"rdfs:label\"></span>\n          </button>\n          <button class=\"btn btn-secondary view -edit -search\" id=\"add-OrgWithoutLimited\">\n            <span about=\"v-s:AddInGroupOrgWithoutLimitedClassTypes\" property=\"rdfs:label\"></span>\n          </button>\n        </span>\n      </div>\n    </div>\n    <div about=\"@\" class=\"container sheet view edit -search\" data-template=\"v-s:LinksTemplate\" data-embedded=\"true\"></div>\n    <div about=\"@\" class=\"container sheet view -edit -search\" data-template=\"v-s:CommentsTemplate\"></div>\n  </div>\n");
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,